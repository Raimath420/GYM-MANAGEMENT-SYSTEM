<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        drLLTRPJ0wAAAABJRU5ErkJggg==
</value>
  </data>
</root>